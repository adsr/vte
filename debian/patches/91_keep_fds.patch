Upstream: http://bugzilla.gnome.org/show_bug.cgi?id=320128
Description: Keep file descriptors open on vte_fork_pty().

---
 src/pty.cc |   38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

--- a/src/pty.cc
+++ b/src/pty.cc
@@ -87,6 +87,7 @@ typedef struct _VtePtyPrivate VtePtyPriv
 typedef struct {
 	GSpawnChildSetupFunc extra_child_setup;
 	gpointer extra_child_setup_data;
+	int keep_fd;
 } VtePtyChildSetupData;
 
 /**
@@ -227,6 +228,21 @@ vte_pty_child_setup (VtePty *pty)
 		close(fd);
 	}
 
+        if (data->keep_fd > 0) {
+                int i;
+                /* Close most descriptors. */
+                for (i = 0; i < sysconf(_SC_OPEN_MAX); i++) {
+                        if (i != data->keep_fd &&
+                            i != fd && 
+                            i != STDOUT_FILENO && 
+                            i != STDIN_FILENO && 
+                            i != STDERR_FILENO) {
+                                close(i);
+                         }
+                }
+        }
+
+
         /* Now set the TERM environment variable */
         /* FIXME: Setting environment here seems to have no effect, the merged envp2 will override on exec.
          * By the way, we'd need to set the one from there, if any. */
@@ -310,6 +326,24 @@ __vte_pty_merge_environ (char **envp,
 	return (gchar **) g_ptr_array_free (array, FALSE);
 }
 
+static int
+_vte_pty_keep_fd(char **env_add)
+{
+        int i;
+        const gchar *needle = "VTE_PTY_KEEP_FD=";
+
+        if (env_add == NULL)
+                return -1;
+
+        for (i = 0; env_add[i] != NULL; i++) {
+                gchar *s = strstr(env_add[i], needle);
+                if (s != NULL)
+                        return atoi(&s[strlen(needle)]);
+        }
+
+        return -1;
+}
+
 /*
  * __vte_pty_spawn:
  * @pty: a #VtePty
@@ -380,6 +414,10 @@ __vte_pty_spawn (VtePty *pty,
         /* add the given environment to the childs */
         envp2 = __vte_pty_merge_environ (envv, inherit_envv);
 
+        pty->priv->child_setup_data.keep_fd = _vte_pty_keep_fd(envp2);
+        if (pty->priv->child_setup_data.keep_fd > 0)
+                spawn_flags |= G_SPAWN_LEAVE_DESCRIPTORS_OPEN;
+
         _VTE_DEBUG_IF (VTE_DEBUG_MISC) {
                 g_printerr ("Spawning command:\n");
                 for (i = 0; argv[i] != NULL; i++) {
